// Definitions of editor styles registered as theme supports.

// Color definitions: slug, background-color, text-color, link-color.
$color-palette:
	base-0    $wmui-color-base0    $wmui-color-base100 $wmui-color-accent50,
	base-10   $wmui-color-base10   $wmui-color-base100 $wmui-color-accent50,
	base-20   $wmui-color-base20   $wmui-color-base100 $wmui-color-blue90,
	base-30   $wmui-color-base30   $wmui-color-base0   $wmui-color-base10,
	base-50   $wmui-color-base50   $wmui-color-base0   $wmui-color-blue50,
	base-70   $wmui-color-base70   $wmui-color-base0   $wmui-color-blue50,
	base-80   $wmui-color-base80   $wmui-color-base0   $wmui-color-blue50,
	base-90   $wmui-color-base90   $wmui-color-base0   $wmui-color-blue50,
	base-100  $wmui-color-base100  $wmui-color-base10  $wmui-color-blue50,
	blue-50   $wmui-color-blue50   $wmui-color-base100 $wmui-color-blue90,
	blue-90   $wmui-color-blue90   $wmui-color-base0   $wmui-color-blue50,
	red-50    $wmui-color-red50    $wmui-color-base100 $wmui-color-accent90,
	red-90    $wmui-color-red90    $wmui-color-base0   $wmui-color-blue50,
	yellow-50 $wmui-color-yellow50 $wmui-color-base0   $wmui-color-blue50,
	yellow-90 $wmui-color-yellow90 $wmui-color-base0   $wmui-color-blue50;

:root {
	--background-color: #{$wmui-color-base100};
	--text-color: #{$wmui-color-base10};
	--link-color: #{$wmui-color-blue50};
}

@each $color, $background-color, $text-color, $link-color in $color-palette {

	.has-#{$color}-background-color {
		--background-color: #{$background-color};
		--text-color: #{$text-color};
		--link-color: #{$link-color};
		background-color: $background-color;
		background-color: var(--background-color);
		color: $text-color;
		color: var(--text-color);
	}
}

@each $slug, $desktop-size, $mobile-size, $line-height in $font-sizes {

	.has-#{$slug}-font-size {
		// Over-specify styles applied to .single-{post_type} .wysiwyg
		&,
		.page .wysiwyg &,
		.single .wysiwyg & {

			@include has-font-size( $slug );
		}
	}
}

@mixin h1 {
	@extend .has-jumbo-font-size;
	font-weight: 700;
}
@mixin h2 {
	@extend .has-xlarge-font-size;
	font-weight: 400;
}
@mixin h3 {
	@extend .has-large-font-size;
	font-weight: 700;
}
@mixin h4 {
	@extend .has-medium-font-size;
	font-weight: 700;
}

@mixin h5 {
	@extend .has-default-font-size;
	color: unset;
	font-weight: 700;
	text-transform: unset;
}
@mixin h6 {
	@include h5;
}
@mixin h-margins {
	margin: 0 0 0.5em;
}

h2 {
	@include h2;
	@include h-margins;
}

// Define base styles for headings, etc within text content.
.page.has-blocks,
.single.has-blocks,
.block-area.block-area,
.toc__content {

	@include wysiwyg {

		// stylelint-disable at-rule-empty-line-before
		h1 {
			@include h1;
		}
		h2 {
			@include h2;
		}
		h3 {
			@include h3;
		}
		h4 {
			@include h4;
		}
		h5, h6 {
			@include h5;
		}
		// stylelint-enable at-rule-empty-line-before

		h1,
		h3,
		h4,
		h5,
		h6 {
			@include h-margins;
		}

		.is-style-h1 {
			@include h1;
		}
		.is-style-h2 {
			@include h2;
		}
		.is-style-h3 {
			@include h3;
		}
		.is-style-h4 {
			@include h4;
		}
		.is-style-h5 {
			@include h5;
		}
		.is-style-h6 {
			@include h6;
		}

		.is-style-h1,
		.is-style-h2,
		.is-style-h3,
		.is-style-h4,
		.is-style-h5,
		.is-style-h6 {
			@include h-margins;
		}
	}
}

// Negative margins for wide and full align blocks.
.wysiwyg.mw-784 .alignwide {

	@media ( min-width: $medium-landscape ) {
		.single-post & {
			margin-left: ( ( $content-column-post - $content-column ) / 2 );
			margin-right: ( ( $content-column-post - $content-column ) / 2 );
		}
	}
}

.wysiwyg .alignfull {

	.page.has-blocks &,
	.single.has-blocks &,
	.block-area.block-area & {

		@include alignfull();
	}

	.single-story & {

		/**
		 * alignfull does not behave in any kind of rational way on stories,
		 * so we want to effectively disable it.
		 * Eventually stories may receive more attention, at which point we
		 * will probably want to return to this styling.
		 */
		margin-left: 0 !important;
		margin-right: 0 !important;
	}

	.single-post.has-blocks & {
		margin-left: rem(-20);
		margin-right: rem(-20);
		min-width: 100%;

		@media ( min-width: #{$width-breakpoint-tablet} ) {
			margin-left: calc(#{$content-column-post / 2} - 50vw + #{$half-scrollbar-width});
			margin-right: calc(#{$content-column-post / 2} - 50vw + #{$half-scrollbar-width});
		}
	}

}
