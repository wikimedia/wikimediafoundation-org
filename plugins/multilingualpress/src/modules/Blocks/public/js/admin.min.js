(function(){"use strict";var __webpack_modules__={148:function(){eval("\n;// CONCATENATED MODULE: ./build/src/modules/Blocks/resources/js/LanguageMenuBlock.js\nvar _window = window,\n    _window$wp = _window.wp,\n    __ = _window$wp.i18n.__,\n    registerBlockType = _window$wp.blocks.registerBlockType,\n    InspectorControls = _window$wp.blockEditor.InspectorControls,\n    _window$wp$components = _window$wp.components,\n    ServerSideRender = _window$wp$components.ServerSideRender,\n    PanelBody = _window$wp$components.PanelBody,\n    PanelRow = _window$wp$components.PanelRow,\n    CheckboxControl = _window$wp$components.CheckboxControl,\n    TextControl = _window$wp$components.TextControl,\n    SelectControl = _window$wp$components.SelectControl,\n    Disabled = _window$wp$components.Disabled,\n    Placeholder = _window$wp$components.Placeholder,\n    __experimentalText = _window$wp$components.__experimentalText,\n    __experimentalHeading = _window$wp$components.__experimentalHeading,\n    _window$wp$element = _window$wp.element,\n    Fragment = _window$wp$element.Fragment,\n    useState = _window$wp$element.useState,\n    _window$lodash = _window.lodash,\n    includes = _window$lodash.includes,\n    isEmpty = _window$lodash.isEmpty,\n    xor = _window$lodash.xor,\n    unionBy = _window$lodash.unionBy;\nvar languageMenuBlock = function languageMenuBlock(configuration) {\n  registerBlockType(configuration.name, {\n    title: configuration.title,\n    icon: configuration.icon,\n    category: configuration.category,\n    attributes: configuration.attributes,\n    edit: function edit(props) {\n      var _props$attributes = props.attributes,\n          languages = _props$attributes.languages,\n          titles = _props$attributes.titles,\n          flagDisplayType = _props$attributes.flagDisplayType,\n          setAttributes = props.setAttributes;\n      var areLanguagesSelected = !isEmpty(languages);\n\n      var isLanguageSelected = function isLanguageSelected(id) {\n        return includes(languages, parseInt(id));\n      };\n\n      var onlanguageToggle = function onlanguageToggle(id, name) {\n        var newLanguages = xor(languages, [parseInt(id)]);\n        setAttributes({\n          languages: newLanguages\n        });\n        titleValue(id) === undefined && onlanguageLabelChange(id, name);\n      };\n\n      var onlanguageLabelChange = function onlanguageLabelChange(id, value) {\n        var titlesObj = {\n          'id': id,\n          'title': value\n        };\n        var newTitles = unionBy([titlesObj], titles, 'id');\n        setAttributes({\n          titles: newTitles\n        });\n      };\n\n      var titleValue = function titleValue(siteId) {\n        var _titles$find;\n\n        return !isEmpty(titles) && ((_titles$find = titles.find(function (_ref) {\n          var id = _ref.id,\n              title = _ref.title;\n          return id === siteId;\n        })) === null || _titles$find === void 0 ? void 0 : _titles$find.title);\n      };\n\n      var relatedSites = configuration.extra.relatedSites;\n      var LanguageControls = relatedSites.map(function (_ref2) {\n        var name = _ref2.name,\n            id = _ref2.id;\n        return /*#__PURE__*/React.createElement(\"section\", {\n          key: id\n        }, /*#__PURE__*/React.createElement(__experimentalHeading, null, name), /*#__PURE__*/React.createElement(PanelRow, null, /*#__PURE__*/React.createElement(CheckboxControl, {\n          key: 'languages' + id,\n          checked: isLanguageSelected(id),\n          onChange: function onChange() {\n            onlanguageToggle(id, name);\n          }\n        }), /*#__PURE__*/React.createElement(TextControl, {\n          key: 'titles' + id,\n          label: __('', 'ensi-blocks'),\n          style: {\n            marginBottom: '30px'\n          },\n          value: titleValue(id) ? titleValue(id) : name,\n          onChange: function onChange(value) {\n            onlanguageLabelChange(id, value ? value : name);\n          }\n        })));\n      });\n      var isSiteFlagsModuleActive = configuration.extra.isSiteFlagsModuleActive;\n\n      var siteFlagsControls = function siteFlagsControls() {\n        return /*#__PURE__*/React.createElement(PanelRow, null, /*#__PURE__*/React.createElement(SelectControl, {\n          label: __('Site Flags', 'multilingualpress'),\n          value: flagDisplayType,\n          options: [{\n            label: 'Only Languages',\n            value: 'only_language'\n          }, {\n            label: 'Flags and Languages',\n            value: 'flag_and_text'\n          }, {\n            label: 'Only Flags',\n            value: 'only_flag'\n          }],\n          onChange: function onChange(flagDisplayType) {\n            return setAttributes({\n              flagDisplayType: flagDisplayType\n            });\n          }\n        }));\n      };\n\n      return /*#__PURE__*/React.createElement(Fragment, null, /*#__PURE__*/React.createElement(InspectorControls, null, /*#__PURE__*/React.createElement(PanelBody, {\n        title: __('Language Selector', 'multilingualpress'),\n        initialOpen: true\n      }, isEmpty(relatedSites) && __(\"Current site doesn't have any relations\", 'multilingualpress'), LanguageControls, isSiteFlagsModuleActive && siteFlagsControls())), !areLanguagesSelected && /*#__PURE__*/React.createElement(Placeholder, {\n        icon: configuration.icon,\n        label: configuration.title,\n        instructions: configuration.description\n      }), areLanguagesSelected && /*#__PURE__*/React.createElement(Disabled, null, /*#__PURE__*/React.createElement(ServerSideRender, {\n        block: configuration.name,\n        attributes: props.attributes\n      })));\n    },\n    save: function save() {\n      return null;\n    }\n  });\n};\n;// CONCATENATED MODULE: ./build/src/modules/Blocks/resources/js/admin.js\nvar _window$multilingualp;\n\n\n'use strict';\n\nvar LanguageMenuConfiguration = (_window$multilingualp = window.multilingualpressLanguageMenu) !== null && _window$multilingualp !== void 0 ? _window$multilingualp : null;\n\nif (LanguageMenuConfiguration) {\n  languageMenuBlock(LanguageMenuConfiguration);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///148\n")}},__webpack_exports__={};__webpack_modules__[148]()})();
//# sourceMappingURL=admin.min.js.map